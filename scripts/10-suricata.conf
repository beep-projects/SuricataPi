input {
  file {
    path => ["/var/log/suricata/eve.json"]
    sincedb_path => ["/var/lib/logstash/sincedb"]
    codec => json { target => "[suricata]" }
    type => "Suricata"
  }
}
 
filter {
  if [type] == "Suricata" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    translate {
    field => "[suricata][alert][severity]"
    destination => "[suricata][alert][severity_name]"
    dictionary => {
      "1" => "critical"
      "2" => "high"
      "3" => "medium"
      "4" => "low"
    }
  }
#    ruby {
#    code => "
#        if event.get('[event_type]') == 'fileinfo'
#        event.set('[fileinfo][type]', event.get('[fileinfo][magic]').to_s.split(',')[0])
#        end
#    "
#    }

#    ruby{
#    code => "
#        if event.get('[event_type]') == 'alert'
#        sp = event.get('[alert][signature]').to_s.split(' group ')
#        if (sp.length == 2) and /\A\d+\z/.match(sp[1])
#            event.set('[alert][signature]', sp[0])
#        end
#        end
#        "
#    }
    if [suricata][event_type] != "stats" {
      #mark src and dst as public or private
      cidr {
        address => [ "%{[suricata][src_ip]}" ]
        network => [ "0.0.0.0/32", "::/128", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128","169.254.0.0/16", "fe80::/10","224.0.0.0/4", "ff00::/8","255.255.255.255/32" ]
        add_field => { "[suricata][src_address_type]" => "private" }
      }
      mutate {
        add_field => { "[suricata][src_hostname]" => "%{[suricata][src_ip]}"}
        add_field => { "[suricata][dest_hostname]" => "%{[suricata][dest_ip]}"}
      }
      if ![suricata][src_address_type] {
        mutate {
          add_field => { "[suricata][src_address_type]" => "public" }
        }
        dns {
          reverse => [ "[suricata][src_hostname]" ]
          action => "replace"
        }
      }
      cidr {
        address => [ "%{[suricata][dest_ip]}" ]
        network => [ "0.0.0.0/32", "::/128", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128","169.254.0.0/16", "fe80::/10","224.0.0.0/4", "ff00::/8","255.255.255.255/32" ]
        add_field => { "[suricata][dest_address_type]" => "private" }
      }
      if ![suricata][dest_address_type] {
        mutate {
          add_field => { "[suricata][dest_address_type]" => "public" }
        }
        dns {
          reverse => [ "[suricata][dest_hostname]" ]
          action => "replace"
        }
      }
      #limit geoip lookup only to public IPs. Either src or dst can be public
      if [suricata][src_ip] and [suricata][src_address_type] == "public" {
        geoip {
          source => "[suricata][src_ip]"
          target => "geoip"
        }
      } else if [suricata][dest_ip] and [suricata][dest_address_type] == "public" {
        geoip {
          source => "[suricata][dest_ip]"
          target => "geoip"
        }
      }
    }
  }
}

output {
  #to limit the index size, only forward stats and events with a public source or destination to elasticsearch
  if [suricata][event_type] == "stats" or [suricata][src_address_type] == "public" or [suricata][dest_address_type] == "public" {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logstash-suricata-%{+YYYY.MM.dd}"
    }
    #stdout { }
  }
}
